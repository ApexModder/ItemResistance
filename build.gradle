buildscript {
	repositories {
		maven { url = 'https://files.minecraftforge.net/maven' }
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
	}
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

def forge_version = '35.0.2'
def mc_version = '1.16.4'
def mappings_version = '20201028-1.16.3'

def mod_version = '2.0.0'
def mod_package = 'com.apex.forge.itemresistance'
def mod_name = 'ItemResistance'
def mod_author = 'ApexModder'

version = "${mod_version}"
group = "${mod_package}"
archivesBaseName = "${mod_name}-${mc_version}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
	mappings channel: 'snapshot', version: "${mappings_version}"
	// makeObfSourceJar = false
	// accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

	runs {
		client {
			workingDirectory project.file('run/client')

			// property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			// property 'forge.logging.console.level', 'debug'

			mods {
				itemresistance {
					source sourceSets.main
				}
			}
		}

		clientAuthed {
			parent runs.client

			if(project.hasProperty('mc_uuid')) {
				args '--uuid', project.getProperty('mc_uuid');
			}

			if(project.hasProperty('mc_username')) {
				args '--username', project.getProperty('mc_username');
			}

			if(project.hasProperty('mc_accessToken')) {
				args '--accessToken', project.getProperty('mc_accessToken');
			}
		}

		server {
			workingDirectory project.file('run/server')

			// property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			// property 'forge.logging.console.level', 'debug'

			args 'nogui'

			mods {
				itemresistance {
					source sourceSets.main
				}
			}
		}

		data {
			workingDirectory project.file('run/data')

			// property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			// property 'forge.logging.console.level', 'debug'

			args '--mod', 'itemresistance', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

			mods {
				itemresistance {
					source sourceSets.main
				}
			}
		}
	}
}

sourceSets.main.resources {
	srcDir 'src/generated/resources'
}

dependencies {
	minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
}

jar {
	manifest {
		attributes([
			'Specification-Title': "${mod_name}",
			'Specification-Vendor': "${mod_author}",
			'Specification-Version': '1',
			'Implementation-Title': "${mod_name}",
			'Implementation-Version': "${mod_version}",
			'Implementation-Vendor' : "${mod_name}",
			'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}